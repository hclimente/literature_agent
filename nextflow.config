params {
    // ===========================
    // Backend Configuration
    // ===========================
    backend {
        from = "journals_tsv"  // Options: "articles_json", "duckdb", "journals_tsv"
        to   = "articles_json" // Options: "articles_json", "duckdb", "zotero"
    }

    // backend-specific parameters
    duckdb {
        database_path   = "papers_please.duckdb"
    }
    articles_json {
        articles_json   = "articles.json"
        outdir          = "./results"
    }

    // ===========================
    // LLM Models Configuration
    // ===========================
    batch_size          = 10
    metadata_extraction {
        model = "gemini-2.5-flash-lite"
        system_prompt = "${projectDir}/prompts/metadata_extraction.md"
    }
    screening {
        model = "gemini-2.5-flash-lite"
        system_prompt = "${projectDir}/prompts/screening.md"
    }
    prioritization {
        model = "gemini-2.5-flash-lite"
        system_prompt = "${projectDir}/prompts/prioritization.md"
    }

    // ===========================
    // Others
    // ===========================
    debug               = false

}

// ===========================
// Docker Configuration
// ===========================
docker {
    enabled = true
    runOptions = "--platform linux/amd64"
}

// ===========================
// Process Configuration
// ===========================
process {
    maxForks = 10
    errorStrategy = 'terminate'  // Fail fast
    maxRetries = 0

    // Gemini API rate limiting
    withLabel: 'gemini_api' {
        maxForks = 3
        errorStrategy = {
            if (task.exitStatus == 429) { // Rate limit error
                if (task.attempt <= 10) {
                    sleep(Math.pow(2, task.attempt) * 200 as long)
                    return 'retry'
                } else {
                    return 'terminate'
                }
            } else {
                'retry'
            }
        }
        maxRetries = 10
    }
}

// ===========================
// Executor Configuration
// ===========================
executor {
    $local {
        queueSize = 50
        submitRateLimit = '10/1min'
        pollInterval = '2sec'
    }
}
